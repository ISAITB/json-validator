#
# Copyright 2018-2019 the Justify authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

LINE_WITH_LOCATION=[{row},{col}] {message}
LINE_WITH_POINTER=[{pointer}] {message}
LINE_WITH_BOTH=[{row},{col}][{pointer}] {message}

# InstanceType enumerators
InstanceType.NULL=null
InstanceType.BOOLEAN=boolean
InstanceType.OBJECT=object
InstanceType.ARRAY=array
InstanceType.NUMBER=number
InstanceType.STRING=string
InstanceType.INTEGER=integer

# Problems for any type
INSTANCE_PROBLEM_TYPE=The value must be of {expected} type, but actual type is {actual}.
INSTANCE_PROBLEM_TYPE_PLURAL=The value must be of type in {expected}, but actual type is {actual}.
INSTANCE_PROBLEM_ENUM=The value must be one of {expected}.
INSTANCE_PROBLEM_CONST=The value must be constant {expectedType} {expected}.

INSTANCE_PROBLEM_NOT_TYPE=The value must not be of {expected} type.
INSTANCE_PROBLEM_NOT_TYPE_PLURAL=The value must not be of type in {expected}, but actual type is {actual}.
INSTANCE_PROBLEM_NOT_ENUM=The value must not be any of {expected}.
INSTANCE_PROBLEM_NOT_CONST=THe value must not be constant {expectedType} {expected}.

# Problems for numeric type
INSTANCE_PROBLEM_MULTIPLEOF=The numeric value must be a multiple of {factor}.
INSTANCE_PROBLEM_MAXIMUM=The numeric value must be less than or equal to {limit}.
INSTANCE_PROBLEM_EXCLUSIVEMAXIMUM=The numeric value must be less than {limit}.
INSTANCE_PROBLEM_MINIMUM=The numeric value must be greater than or equal to {limit}.
INSTANCE_PROBLEM_EXCLUSIVEMINIMUM=The numeric value must be greater than {limit}.

INSTANCE_PROBLEM_NOT_MULTIPLEOF=The numeric value must not be a multiple of {factor}.

# Problems for string type
INSTANCE_PROBLEM_MAXLENGTH=The {localizedSubject} must be at most {limit} character(s), but actual length is {actual}.
INSTANCE_PROBLEM_MINLENGTH=The {localizedSubject} must be at least {limit} character(s), but actual length is {actual}.
INSTANCE_PROBLEM_PATTERN=The {localizedSubject} must match the pattern "{pattern}".

INSTANCE_PROBLEM_NOT_MAXLENGTH=The {localizedSubject} must be more than {limit} character(s), but actual length is {actual}.
INSTANCE_PROBLEM_NOT_MINLENGTH=The {localizedSubject} must be less than {limit} character(s), but actual length is {actual}.
INSTANCE_PROBLEM_NOT_PATTERN=The {localizedSubject} must not match the pattern "{pattern}".

STRING_KEY=key name
STRING_VALUE=string value

# Problems for arrays
INSTANCE_PROBLEM_MAXITEMS=The array must have at most {limit} element(s), but actual number is {actual}.
INSTANCE_PROBLEM_MINITEMS=The array must have at least {limit} element(s), but actual number is {actual}.
INSTANCE_PROBLEM_UNIQUEITEMS=The array must consist only of unique elements, but the element at [{index}] is the same as the element at [{firstIndex}].
INSTANCE_PROBLEM_CONTAINS=The array must contain at least one valid element.

INSTANCE_PROBLEM_MINCONTAINS=The array must have at least {limit} element(s) satisfying the current schema.
INSTANCE_PROBLEM_MAXCONTAINS=The array must have at most {limit} element(s) satisfying the current schema.

INSTANCE_PROBLEM_REDUNDANT_ITEM=The array must not have an element at index {index}.

INSTANCE_PROBLEM_NOT_UNIQUEITEMS=The array must have a duplicated element.

INSTANCE_PROBLEM_ARRAY_EMPTY=The array must not be empty.

# Problems for objects
INSTANCE_PROBLEM_REQUIRED=The object must have a property whose name is "{required}".
INSTANCE_PROBLEM_MAXPROPERTIES=The object must have at most {limit} property(ies), but actual number is {actual}.
INSTANCE_PROBLEM_MINPROPERTIES=The object must have at least {limit} property(ies), but actual number is {actual}.
INSTANCE_PROBLEM_DEPENDENCIES=The object must have a property "{required}" when it has a property "{dependant}".

INSTANCE_PROBLEM_REDUNDANT_PROPERTY=The object must not have a property whose name is "{name}".

INSTANCE_PROBLEM_NOT_REQUIRED=The object must not have a property whose name is "{required}".
INSTANCE_PROBLEM_NOT_REQUIRED_PLURAL=The object must not have all of the properties {required|quote} together.
INSTANCE_PROBLEM_NOT_DEPENDENCIES=The object must not have a property "{required}" when it has a property "{dependant}".
INSTANCE_PROBLEM_NOT_DEPENDENCIES_PLURAL=The object must not have all of the properties {required|quote} when it has a property "{dependant}".

INSTANCE_PROBLEM_OBJECT_EMPTY=The object must not be empty.
INSTANCE_PROBLEM_OBJECT_NONEMPTY=The object must be empty.

# Problems for boolean logic
INSTANCE_PROBLEM_ANYOF=At least one of the following sets of problems must be resolved.
INSTANCE_PROBLEM_ONEOF_FEW=Exactly one of the following sets of problems must be resolved.
INSTANCE_PROBLEM_ONEOF_MANY=All but one of the following sets of problems must be resolved.

# Problems for formats
INSTANCE_PROBLEM_FORMAT=The value must be a valid {localizedAttribute}.
INSTANCE_PROBLEM_NOT_FORMAT=The value must not be a valid {localizedAttribute}.

# Problems for contents
INSTANCE_PROBLEM_CONTENTENCODING=The content must be encoded in {encoding}.
INSTANCE_PROBLEM_NOT_CONTENTENCODING=The content must not be encoded in {encoding}.
INSTANCE_PROBLEM_CONTENTMEDIATYPE=The content must be of media type "{type}".
INSTANCE_PROBLEM_NOT_CONTENTMEDIATYPE=The content must not be of media type "{type}".

# Format attributes
FORMAT_DATE=date
FORMAT_DATE_TIME=date and time
FORMAT_EMAIL=email address
FORMAT_HOSTNAME=host name
FORMAT_IDN_EMAIL=internationalized email address
FORMAT_IDN_HOSTNAME=internationalized host name
FORMAT_IPV4=IPv4 address
FORMAT_IPV6=IPv6 address
FORMAT_IRI=IRI
FORMAT_IRI_REFERENCE=IRI reference
FORMAT_JSON_POINTER=JSON pointer
FORMAT_REGEX=regular expression
FORMAT_RELATIVE_JSON_POINTER=relative JSON pointer
FORMAT_TIME=time
FORMAT_URI=URI
FORMAT_URI_REFERENCE=URI reference
FORMAT_URI_TEMPLATE=URI template

# Problems for others
INSTANCE_PROBLEM_NOT_FOUND=JSON instance does not exist at the path "{path}".
INSTANCE_PROBLEM_UNKNOWN=The value never be valid according to the schema.

# Problems for schema
SCHEMA_PROBLEM_NOT_FOUND=JSON schema does not exist at the path "{path}".
SCHEMA_PROBLEM_EMPTY=The input must not be empty.
SCHEMA_PROBLEM_EOI=Unexpected end of input reached while parsing the schema.
SCHEMA_PROBLEM_REFERENCE=The schema reference "{ref}"({targetId}) cannot be resolved.
SCHEMA_PROBLEM_REFERENCE_LOOP=The schema reference starts an infinite recursive looping.
SCHEMA_PROBLEM_KEYWORD_UNKNOWN="{keyword}" is not recognized as a keyword.
SCHEMA_PROBLEM_FORMAT_UNKNOWN="{attribute}" is not recognized as a format attribute.
SCHEMA_PROBLEM_CONTENTMEDIATYPE_INVALID=The value must be a media type.
SCHEMA_PROBLEM_VERSION_UNEXPECTED=Expected metaschema is {expected|quote} but actual is "{actual}".
SCHEMA_PROBLEM_VERSION_UNSUPPORTED=Unsuppoted metaschema: "{schema}".

# JSON-P parser
PARSER_ILLEGAL_STATE=JsonParser#{method}() was called in the illegl parser state. \
The current event is {event}.
PARSER_UNEXPECTED_EOI=Unexpected end of input. Expected parser events are: {expected}.

# JSON-P reader
READER_UNEXPECTED_EOI=Unexpected end of input.
READER_READ_ERROR=JsonReader#read() is valid only for START_ARRAY, START_OBJECT parser events. \
But current parser event is {event}
